{"version":3,"sources":["List.jsx","App.js","reportWebVitals.js","index.js"],"names":["List","props","useState","del","setDel","className","style","textDecoration","text","onClick","App","item","setItem","newItem","setNewItem","type","placeholder","value","substr","onChange","e","target","Button","size","alert","preVal","map","val","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gSAiCeA,EA3BF,SAACC,GAAS,IAAD,EACIC,oBAAS,GADb,mBACXC,EADW,KACNC,EADM,KAWlB,OAEI,sBAAKC,UAAU,WAAf,UACG,sBAAMC,MAAO,CAACC,eAAqB,GAALJ,EAAY,eAAiB,QAA3D,SAAqEF,EAAMO,OAE3E,iCAIA,cAAC,IAAD,CAAkBH,UAAU,cAAcI,QAb7B,WAChBL,GAAO,MAaJ,cAAC,IAAD,CAAmBC,UAAU,UAAUI,QAlB9B,WACZL,GAAO,aC0CAM,EA5CJ,WAAM,IAAD,EAEQR,mBAAS,IAFjB,mBAETS,EAFS,KAEHC,EAFG,OAGcV,mBAAS,IAHvB,mBAGTW,EAHS,KAGAC,EAHA,KAuBd,OACE,qBAAKT,UAAU,4BAAf,SACI,sBAAKA,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,uBACA,uBACA,sBAAKA,UAAU,YAAf,UACA,uBAAOU,KAAK,OAAOC,YAAY,WAAWC,MAAON,EAAKO,OAAO,EAAE,IAAKC,SAxB1D,SAACC,GACjBR,EAAQQ,EAAEC,OAAOJ,UAwBX,cAACK,EAAA,EAAD,CAAQC,KAAK,QAAQlB,UAAU,YAAYI,QArBtC,WACD,IAAPE,EACDa,MAAM,8BAIRV,GAAW,SAACW,GACV,MAAM,GAAN,mBAAWA,GAAX,CAAkBd,OAIpBC,EAAQ,KAUF,SAA6D,cAAC,IAAD,CAASP,UAAU,iBAEhF,qBAAKA,UAAU,OAAf,SACE,6BACGQ,EAAQa,KAAI,SAACC,EAAIC,GAChB,OAAO,6BAAI,cAAC,EAAD,CAAMpB,KAAMmB,GAAUC,kBC/BlCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAMhDZ,M","file":"static/js/main.23270179.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport UndoOutlinedIcon from '@material-ui/icons/UndoOutlined';\r\n\r\n\r\nconst List = (props)=>{\r\n    const [del, setDel] = useState(false);\r\n\r\n    const delItem = ()=>{\r\n        setDel(true)\r\n    }\r\n\r\n    const restoreItem = ()=>{\r\n        setDel(false);\r\n    }\r\n\r\n    return(\r\n       \r\n        <div className='listMenu'>\r\n           <span style={{textDecoration: del==true ? 'line-through' : 'none'}}>{props.text}\r\n           </span>\r\n           <span>\r\n           {/* <Button className=\"delBtn\"><DeleteOutlineIcon className=\"delIcon\" onClick={restoreItem}/></Button> \r\n           <Button className=\"delBtn\"><DeleteOutlineIcon className=\"delIcon\" onClick={delItem}/></Button>  */}\r\n\r\n           <UndoOutlinedIcon className=\"restoreIcon\" onClick={restoreItem}/>\r\n           <DeleteOutlineIcon className=\"delIcon\" onClick={delItem}/>\r\n           </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List;","import React,{useState} from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle'\nimport './SASS/Index.css';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport List from \"./List\";\n\nconst App= ()=> {\n\n  let [item, setItem] = useState('');\n  let [newItem, setNewItem] = useState([]);\n\n  let captureItem = (e)=>{\n    setItem(e.target.value);\n  }\n\n  let addData =()=>{\n    if(item ==''){\n      alert('Plesae add the item first.');\n  }\n  else{\n    \n    setNewItem((preVal)=>{\n      return [...preVal,item];\n    })\n  }\n\n    setItem('');\n  }\n\n  return (\n    <div className=\"cold-10 mx-auto container\">\n        <div className=\" main\">\n          <h1 className=\"text-center\">ToDo List</h1>\n          <br/>\n          <div className=\"inputArea\">\n          <input type=\"text\" placeholder=\"Add Item\" value={item.substr(0,22)} onChange={captureItem}/>\n          <Button size=\"large\" className=\"btnEffect\" onClick={addData}><AddIcon className=\"addIcon\" /></Button>\n          </div>\n          <div className=\"list\">\n            <ol>\n              {newItem.map((val,index)=>{\n                return <li><List text={val} key={index}/></li>;\n              })}\n            </ol>\n          </div>\n       </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}